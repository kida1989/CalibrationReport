


<script>

$(document).ready(function(){



  drawPlot = function (locationid,checkBox,start_date,end_date) {



    var HPX = [];
    var HPY = [];
    var HPZ = [];
    var RPX = [];
    var RPY = [];
    var RPZ = [];
        $.ajax({
              url:'/api/calibration',
              type:'GET',
              data: {
                locationid: locationid,
                start_date: start_date,
                end_date:end_date,
              },
              dataType:'json',
            })
          .done( function(data) {
              $.each(data, function(key, value){

                HPX.push({x: new Date(value["DateModified"]), y: value["HomePositionX"]});
                HPY.push({x: new Date(value["DateModified"]), y: value["HomePositionY"]});
                HPZ.push({x: new Date(value["DateModified"]), y: value["HomePositionZ"]});
                RPX.push({x: new Date(value["DateModified"]), y: value["RubberPositionX"]});
                RPY.push({x: new Date(value["DateModified"]), y: value["RubberPositionY"]});
                RPZ.push({x: new Date(value["DateModified"]), y: value["RubberPositionZ"]});

              });

              var chart = new CanvasJS.Chart("chartContainer",{
                zoomEnabled:true,
                exportEnabled: true,

                title:{
                  text:data[0].Name
                },


                data: [{
                  type: "line",
                  showInLegend:true,
                  legendText:"HomePositionX",
                  dataPoints : HPX
                },
                {
                  type: "line",
                  showInLegend:true,
                  legendText:"HomePositionY",
                  dataPoints : HPY
                },
                {
                  type: "line",
                  showInLegend:true,
                  legendText:"HomePositionZ",
                  dataPoints : HPZ
                },
                {
                  type: "line",
                  showInLegend:true,
                  legendText:"RubberPositionX",
                  dataPoints : RPX
                },
                {
                  type: "line",
                  showInLegend:true,
                  legendText:"RubberPositionY",
                  dataPoints : RPY
                },
                {
                  type: "line",
                  showInLegend:true,
                  legendText:"RubberPositionZ",
                  dataPoints : RPZ
                },
              ]
              });
              chart.render();



                for(i=0; i< chart.data.length;i++){
                    if ( chart.data[i].legendText == checkBox[i].id && checkBox[i].check == false) {


                      chart.data[i].set('visible', false);
                      console.log('this is a test')

                    }

                    if (chart.data[i].legendText == checkBox[i].id && checkBox[i].check == true){

                      chart.data[i].set('visible', true)
                    }

                }


              $('input[type=checkbox]').change(function(){

                              var name = $(this).val();
                              var check = $(this).prop('checked');
                              var checkbox_id = $(this).attr('id');

                              console.log("Change: " + name + " to " + check);


                              for(i=0; i<chart.data.length;i++){
                                    if ( chart.data[i].legendText == checkbox_id && check == false) {


                                      chart.data[i].set('visible', false);

                                    }

                                    if (chart.data[i].legendText == checkbox_id && check == true){

                                      chart.data[i].set('visible', true)
                                    }

                                }
                  })






            })


  }


  $.urlParam = function(name){
    var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
    return results[1] || 0;
  }

  limitPicker = function(locationid){
    $.ajax({
          url:'/api/calibration',
          type:'GET',
          data: {
            locationid: locationid,

          },
          dataType:'json',
        })
        .done( function(data) {
          var max = new Date(data[data.length-1].DateModified);
          var min = new Date(data[0].DateModified);

          $('input[id="datepicker"]').daterangepicker({
          startDate : min,
          EndDate : max,
          minDate : min,
          maxDate : max

          });
        })
    }





  var locationid = $.urlParam('locationid');

  limitPicker(locationid)

  var cb_array = [];
  check = $("input[type=checkbox]").each(function(){
    cb_array.push({'id':$(this).attr('id'), 'check':$(this).prop('checked')});

  })
  drawPlot(locationid,cb_array);



  $('#datepicker').on('apply.daterangepicker', function(ev, picker) {
    start_date = picker.startDate.format('YYYY-MM-DD');
    end_date = picker.endDate.format('YYYY-MM-DD');
    var cb_array = [];

    check = $("input[type=checkbox]").each(function(){
      cb_array.push({'id':$(this).attr('id'), 'check':$(this).prop('checked')});

    })


    drawPlot(locationid,cb_array,start_date,end_date)
    });



  });











</script>

<style trype="text/css">

  #navigation {
    border:  5px blue solid;
    width: 100%;
    height: 100px;
  }

  .canvasjs-chart-credit {
   display: none;
}

</style>

<div id="navigation" >
  Date : <input type="text" id="datepicker">
  <a id = 'back' href='/'> HOME  </a>

</div>

<div id="chartContainer" style="height: 350px; width: 100%;"></div>

<div id="options">
HPXDelta<input type = "checkbox" id="HomePositionX" value= 'HPXDelta_cb' checked ></input>
HPYDelta<input type = "checkbox" id="HomePositionY" checked></input>
HPZDelta<input type = "checkbox" id="HomePositionZ" checked></input>
RPXDelta<input type = "checkbox" id="RubberPositionX" checked></input>
RPYDelta<input type = "checkbox" id="RubberPositionY" checked></input>
RPZDelta<input type = "checkbox" id="RubberPositionZ" checked></input>
 </div>
